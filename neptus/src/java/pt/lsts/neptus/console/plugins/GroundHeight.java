/*
 * Copyright (c) 2004-2021 Universidade do Porto - Faculdade de Engenharia
 * Laboratório de Sistemas e Tecnologia Subaquática (LSTS)
 * All rights reserved.
 * Rua Dr. Roberto Frias s/n, sala I203, 4200-465 Porto, Portugal
 *
 * This file is part of Neptus, Command and Control Framework.
 *
 * Commercial Licence Usage
 * Licencees holding valid commercial Neptus licences may use this file
 * in accordance with the commercial licence agreement provided with the
 * Software or, alternatively, in accordance with the terms contained in a
 * written agreement between you and Universidade do Porto. For licensing
 * terms, conditions, and further information contact lsts@fe.up.pt.
 *
 * Modified European Union Public Licence - EUPL v.1.1 Usage
 * Alternatively, this file may be used under the terms of the Modified EUPL,
 * Version 1.1 only (the "Licence"), appearing in the file LICENSE.md
 * included in the packaging of this file. You may not use this work
 * except in compliance with the Licence. Unless required by applicable
 * law or agreed to in writing, software distributed under the Licence is
 * distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF
 * ANY KIND, either express or implied. See the Licence for the specific
 * language governing permissions and limitations at
 * https://www.lsts.pt/neptus/licence.
 *
 * For more information please see <http://lsts.fe.up.pt/neptus>.
 *
 * Author: zp
 * 05/07/2016
 */
package pt.lsts.neptus.console.plugins;

import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.util.Date;
import java.util.Properties;

import pt.lsts.neptus.NeptusLog;
import pt.lsts.neptus.comm.manager.imc.ImcSystem;
import pt.lsts.neptus.comm.manager.imc.ImcSystemsHolder;
import pt.lsts.neptus.plugins.NeptusProperty;
import pt.lsts.neptus.plugins.PluginUtils;

/**
 * @author zp
 *
 */
public class GroundHeight {

    @NeptusProperty(name="WGS84 height at ground level")
    public double GROUND_HEIGHT = 0;

    @NeptusProperty(name="IMC system at ground level", description="Name of an IMC system at ground level, (empty for none)")
    public String GROUND_IMC_SYSTEM = "";

    private static final File file = new File("conf/groundheight.properties");

    private GroundHeight() {
        loadFromFile();
    }

    private void loadFromFile() {
        Properties props = new Properties();
        try {
            if (file.canRead()) {
                props.load(new FileReader(file));
            }
        }
        catch (Exception e) {
            NeptusLog.pub().error(e);
        }
        PluginUtils.loadProperties(props, this);
    }

    private void saveToFile() {
        Properties props = PluginUtils.saveProperties(this, false);
        try {
            props.store(new FileOutputStream(file), "File generated by Neptus on " + new Date());
        }
        catch (Exception e) {
            NeptusLog.pub().error(e);
        }
    }
    
    
    public void editProperties() {
        boolean cancelled = PluginUtils.editPluginProperties(this, true);
        if (!cancelled)
            saveToFile();
    }

    private static GroundHeight instance = null;

    public static GroundHeight instance() {
        if (instance == null)
            instance = new GroundHeight();
        return instance;
    }    
    
    public double getHeight() {
        if (GROUND_IMC_SYSTEM.isEmpty()) {
            return GROUND_HEIGHT;
        }
        ImcSystem sys = ImcSystemsHolder.getSystemWithName(GROUND_IMC_SYSTEM);
        if (sys == null)
            return 0;
        
        return sys.getLocation().getHeight();
    }
}
