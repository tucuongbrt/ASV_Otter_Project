// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensor.proto

package org.mbari.trex;

public final class Sensor {
  private Sensor() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SensorMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .org.mbari.trex.SensorMessage.Sample sample = 2;
    java.util.List<org.mbari.trex.Sensor.SensorMessage.Sample> 
        getSampleList();
    org.mbari.trex.Sensor.SensorMessage.Sample getSample(int index);
    int getSampleCount();
    java.util.List<? extends org.mbari.trex.Sensor.SensorMessage.SampleOrBuilder> 
        getSampleOrBuilderList();
    org.mbari.trex.Sensor.SensorMessage.SampleOrBuilder getSampleOrBuilder(
        int index);
    
    // optional .org.mbari.trex.SensorMessage.GpsError gps_fix = 1;
    boolean hasGpsFix();
    org.mbari.trex.Sensor.SensorMessage.GpsError getGpsFix();
    org.mbari.trex.Sensor.SensorMessage.GpsErrorOrBuilder getGpsFixOrBuilder();
    
    // repeated .org.mbari.trex.Predicate observations = 3;
    java.util.List<org.mbari.trex.Trex.Predicate> 
        getObservationsList();
    org.mbari.trex.Trex.Predicate getObservations(int index);
    int getObservationsCount();
    java.util.List<? extends org.mbari.trex.Trex.PredicateOrBuilder> 
        getObservationsOrBuilderList();
    org.mbari.trex.Trex.PredicateOrBuilder getObservationsOrBuilder(
        int index);
  }
  public static final class SensorMessage extends
      com.google.protobuf.GeneratedMessage
      implements SensorMessageOrBuilder {
    // Use SensorMessage.newBuilder() to construct.
    private SensorMessage(Builder builder) {
      super(builder);
    }
    private SensorMessage(boolean noInit) {}
    
    private static final SensorMessage defaultInstance;
    public static SensorMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public SensorMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mbari.trex.Sensor.internal_static_org_mbari_trex_SensorMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mbari.trex.Sensor.internal_static_org_mbari_trex_SensorMessage_fieldAccessorTable;
    }
    
    public interface SampleOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required uint64 utime = 1;
      boolean hasUtime();
      long getUtime();
      
      // required float northing = 2;
      boolean hasNorthing();
      float getNorthing();
      
      // required float easting = 3;
      boolean hasEasting();
      float getEasting();
      
      // required float depth = 4;
      boolean hasDepth();
      float getDepth();
      
      // optional float temperature = 5;
      boolean hasTemperature();
      float getTemperature();
      
      // optional float salinity = 6;
      boolean hasSalinity();
      float getSalinity();
      
      // optional float nitrate = 7;
      boolean hasNitrate();
      float getNitrate();
      
      // optional int32 gulper_id = 8;
      boolean hasGulperId();
      int getGulperId();
      
      // optional float chfl = 9;
      boolean hasChfl();
      float getChfl();
      
      // optional uint32 utm_zone = 10 [default = 10];
      boolean hasUtmZone();
      int getUtmZone();
      
      // optional string utm_letter = 11 [default = "N"];
      boolean hasUtmLetter();
      String getUtmLetter();
      
      // optional string system_id = 12;
      boolean hasSystemId();
      String getSystemId();
    }
    public static final class Sample extends
        com.google.protobuf.GeneratedMessage
        implements SampleOrBuilder {
      // Use Sample.newBuilder() to construct.
      private Sample(Builder builder) {
        super(builder);
      }
      private Sample(boolean noInit) {}
      
      private static final Sample defaultInstance;
      public static Sample getDefaultInstance() {
        return defaultInstance;
      }
      
      public Sample getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mbari.trex.Sensor.internal_static_org_mbari_trex_SensorMessage_Sample_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mbari.trex.Sensor.internal_static_org_mbari_trex_SensorMessage_Sample_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required uint64 utime = 1;
      public static final int UTIME_FIELD_NUMBER = 1;
      private long utime_;
      public boolean hasUtime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getUtime() {
        return utime_;
      }
      
      // required float northing = 2;
      public static final int NORTHING_FIELD_NUMBER = 2;
      private float northing_;
      public boolean hasNorthing() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getNorthing() {
        return northing_;
      }
      
      // required float easting = 3;
      public static final int EASTING_FIELD_NUMBER = 3;
      private float easting_;
      public boolean hasEasting() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getEasting() {
        return easting_;
      }
      
      // required float depth = 4;
      public static final int DEPTH_FIELD_NUMBER = 4;
      private float depth_;
      public boolean hasDepth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getDepth() {
        return depth_;
      }
      
      // optional float temperature = 5;
      public static final int TEMPERATURE_FIELD_NUMBER = 5;
      private float temperature_;
      public boolean hasTemperature() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getTemperature() {
        return temperature_;
      }
      
      // optional float salinity = 6;
      public static final int SALINITY_FIELD_NUMBER = 6;
      private float salinity_;
      public boolean hasSalinity() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public float getSalinity() {
        return salinity_;
      }
      
      // optional float nitrate = 7;
      public static final int NITRATE_FIELD_NUMBER = 7;
      private float nitrate_;
      public boolean hasNitrate() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public float getNitrate() {
        return nitrate_;
      }
      
      // optional int32 gulper_id = 8;
      public static final int GULPER_ID_FIELD_NUMBER = 8;
      private int gulperId_;
      public boolean hasGulperId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getGulperId() {
        return gulperId_;
      }
      
      // optional float chfl = 9;
      public static final int CHFL_FIELD_NUMBER = 9;
      private float chfl_;
      public boolean hasChfl() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public float getChfl() {
        return chfl_;
      }
      
      // optional uint32 utm_zone = 10 [default = 10];
      public static final int UTM_ZONE_FIELD_NUMBER = 10;
      private int utmZone_;
      public boolean hasUtmZone() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getUtmZone() {
        return utmZone_;
      }
      
      // optional string utm_letter = 11 [default = "N"];
      public static final int UTM_LETTER_FIELD_NUMBER = 11;
      private java.lang.Object utmLetter_;
      public boolean hasUtmLetter() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public String getUtmLetter() {
        java.lang.Object ref = utmLetter_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            utmLetter_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getUtmLetterBytes() {
        java.lang.Object ref = utmLetter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          utmLetter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // optional string system_id = 12;
      public static final int SYSTEM_ID_FIELD_NUMBER = 12;
      private java.lang.Object systemId_;
      public boolean hasSystemId() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public String getSystemId() {
        java.lang.Object ref = systemId_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            systemId_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getSystemIdBytes() {
        java.lang.Object ref = systemId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          systemId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      private void initFields() {
        utime_ = 0L;
        northing_ = 0F;
        easting_ = 0F;
        depth_ = 0F;
        temperature_ = 0F;
        salinity_ = 0F;
        nitrate_ = 0F;
        gulperId_ = 0;
        chfl_ = 0F;
        utmZone_ = 10;
        utmLetter_ = "N";
        systemId_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasUtime()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasNorthing()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasEasting()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDepth()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, utime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, northing_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, easting_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, depth_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(5, temperature_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeFloat(6, salinity_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeFloat(7, nitrate_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeInt32(8, gulperId_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeFloat(9, chfl_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeUInt32(10, utmZone_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBytes(11, getUtmLetterBytes());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeBytes(12, getSystemIdBytes());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, utime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, northing_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, easting_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, depth_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, temperature_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(6, salinity_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(7, nitrate_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(8, gulperId_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(9, chfl_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(10, utmZone_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(11, getUtmLetterBytes());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(12, getSystemIdBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.mbari.trex.Sensor.SensorMessage.Sample parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.mbari.trex.Sensor.SensorMessage.Sample parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.mbari.trex.Sensor.SensorMessage.Sample parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.mbari.trex.Sensor.SensorMessage.Sample parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.mbari.trex.Sensor.SensorMessage.Sample parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.mbari.trex.Sensor.SensorMessage.Sample parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.mbari.trex.Sensor.SensorMessage.Sample parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.mbari.trex.Sensor.SensorMessage.Sample parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.mbari.trex.Sensor.SensorMessage.Sample parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.mbari.trex.Sensor.SensorMessage.Sample parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.mbari.trex.Sensor.SensorMessage.Sample prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.mbari.trex.Sensor.SensorMessage.SampleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.mbari.trex.Sensor.internal_static_org_mbari_trex_SensorMessage_Sample_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.mbari.trex.Sensor.internal_static_org_mbari_trex_SensorMessage_Sample_fieldAccessorTable;
        }
        
        // Construct using org.mbari.trex.Sensor.SensorMessage.Sample.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          utime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          northing_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          easting_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          depth_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000008);
          temperature_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000010);
          salinity_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000020);
          nitrate_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000040);
          gulperId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          chfl_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000100);
          utmZone_ = 10;
          bitField0_ = (bitField0_ & ~0x00000200);
          utmLetter_ = "N";
          bitField0_ = (bitField0_ & ~0x00000400);
          systemId_ = "";
          bitField0_ = (bitField0_ & ~0x00000800);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.mbari.trex.Sensor.SensorMessage.Sample.getDescriptor();
        }
        
        public org.mbari.trex.Sensor.SensorMessage.Sample getDefaultInstanceForType() {
          return org.mbari.trex.Sensor.SensorMessage.Sample.getDefaultInstance();
        }
        
        public org.mbari.trex.Sensor.SensorMessage.Sample build() {
          org.mbari.trex.Sensor.SensorMessage.Sample result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.mbari.trex.Sensor.SensorMessage.Sample buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          org.mbari.trex.Sensor.SensorMessage.Sample result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public org.mbari.trex.Sensor.SensorMessage.Sample buildPartial() {
          org.mbari.trex.Sensor.SensorMessage.Sample result = new org.mbari.trex.Sensor.SensorMessage.Sample(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.utime_ = utime_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.northing_ = northing_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.easting_ = easting_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.depth_ = depth_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.temperature_ = temperature_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.salinity_ = salinity_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.nitrate_ = nitrate_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.gulperId_ = gulperId_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.chfl_ = chfl_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.utmZone_ = utmZone_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.utmLetter_ = utmLetter_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.systemId_ = systemId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.mbari.trex.Sensor.SensorMessage.Sample) {
            return mergeFrom((org.mbari.trex.Sensor.SensorMessage.Sample)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(org.mbari.trex.Sensor.SensorMessage.Sample other) {
          if (other == org.mbari.trex.Sensor.SensorMessage.Sample.getDefaultInstance()) return this;
          if (other.hasUtime()) {
            setUtime(other.getUtime());
          }
          if (other.hasNorthing()) {
            setNorthing(other.getNorthing());
          }
          if (other.hasEasting()) {
            setEasting(other.getEasting());
          }
          if (other.hasDepth()) {
            setDepth(other.getDepth());
          }
          if (other.hasTemperature()) {
            setTemperature(other.getTemperature());
          }
          if (other.hasSalinity()) {
            setSalinity(other.getSalinity());
          }
          if (other.hasNitrate()) {
            setNitrate(other.getNitrate());
          }
          if (other.hasGulperId()) {
            setGulperId(other.getGulperId());
          }
          if (other.hasChfl()) {
            setChfl(other.getChfl());
          }
          if (other.hasUtmZone()) {
            setUtmZone(other.getUtmZone());
          }
          if (other.hasUtmLetter()) {
            setUtmLetter(other.getUtmLetter());
          }
          if (other.hasSystemId()) {
            setSystemId(other.getSystemId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasUtime()) {
            
            return false;
          }
          if (!hasNorthing()) {
            
            return false;
          }
          if (!hasEasting()) {
            
            return false;
          }
          if (!hasDepth()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                utime_ = input.readUInt64();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                northing_ = input.readFloat();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                easting_ = input.readFloat();
                break;
              }
              case 37: {
                bitField0_ |= 0x00000008;
                depth_ = input.readFloat();
                break;
              }
              case 45: {
                bitField0_ |= 0x00000010;
                temperature_ = input.readFloat();
                break;
              }
              case 53: {
                bitField0_ |= 0x00000020;
                salinity_ = input.readFloat();
                break;
              }
              case 61: {
                bitField0_ |= 0x00000040;
                nitrate_ = input.readFloat();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                gulperId_ = input.readInt32();
                break;
              }
              case 77: {
                bitField0_ |= 0x00000100;
                chfl_ = input.readFloat();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000200;
                utmZone_ = input.readUInt32();
                break;
              }
              case 90: {
                bitField0_ |= 0x00000400;
                utmLetter_ = input.readBytes();
                break;
              }
              case 98: {
                bitField0_ |= 0x00000800;
                systemId_ = input.readBytes();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required uint64 utime = 1;
        private long utime_ ;
        public boolean hasUtime() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public long getUtime() {
          return utime_;
        }
        public Builder setUtime(long value) {
          bitField0_ |= 0x00000001;
          utime_ = value;
          onChanged();
          return this;
        }
        public Builder clearUtime() {
          bitField0_ = (bitField0_ & ~0x00000001);
          utime_ = 0L;
          onChanged();
          return this;
        }
        
        // required float northing = 2;
        private float northing_ ;
        public boolean hasNorthing() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public float getNorthing() {
          return northing_;
        }
        public Builder setNorthing(float value) {
          bitField0_ |= 0x00000002;
          northing_ = value;
          onChanged();
          return this;
        }
        public Builder clearNorthing() {
          bitField0_ = (bitField0_ & ~0x00000002);
          northing_ = 0F;
          onChanged();
          return this;
        }
        
        // required float easting = 3;
        private float easting_ ;
        public boolean hasEasting() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public float getEasting() {
          return easting_;
        }
        public Builder setEasting(float value) {
          bitField0_ |= 0x00000004;
          easting_ = value;
          onChanged();
          return this;
        }
        public Builder clearEasting() {
          bitField0_ = (bitField0_ & ~0x00000004);
          easting_ = 0F;
          onChanged();
          return this;
        }
        
        // required float depth = 4;
        private float depth_ ;
        public boolean hasDepth() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public float getDepth() {
          return depth_;
        }
        public Builder setDepth(float value) {
          bitField0_ |= 0x00000008;
          depth_ = value;
          onChanged();
          return this;
        }
        public Builder clearDepth() {
          bitField0_ = (bitField0_ & ~0x00000008);
          depth_ = 0F;
          onChanged();
          return this;
        }
        
        // optional float temperature = 5;
        private float temperature_ ;
        public boolean hasTemperature() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public float getTemperature() {
          return temperature_;
        }
        public Builder setTemperature(float value) {
          bitField0_ |= 0x00000010;
          temperature_ = value;
          onChanged();
          return this;
        }
        public Builder clearTemperature() {
          bitField0_ = (bitField0_ & ~0x00000010);
          temperature_ = 0F;
          onChanged();
          return this;
        }
        
        // optional float salinity = 6;
        private float salinity_ ;
        public boolean hasSalinity() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        public float getSalinity() {
          return salinity_;
        }
        public Builder setSalinity(float value) {
          bitField0_ |= 0x00000020;
          salinity_ = value;
          onChanged();
          return this;
        }
        public Builder clearSalinity() {
          bitField0_ = (bitField0_ & ~0x00000020);
          salinity_ = 0F;
          onChanged();
          return this;
        }
        
        // optional float nitrate = 7;
        private float nitrate_ ;
        public boolean hasNitrate() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        public float getNitrate() {
          return nitrate_;
        }
        public Builder setNitrate(float value) {
          bitField0_ |= 0x00000040;
          nitrate_ = value;
          onChanged();
          return this;
        }
        public Builder clearNitrate() {
          bitField0_ = (bitField0_ & ~0x00000040);
          nitrate_ = 0F;
          onChanged();
          return this;
        }
        
        // optional int32 gulper_id = 8;
        private int gulperId_ ;
        public boolean hasGulperId() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        public int getGulperId() {
          return gulperId_;
        }
        public Builder setGulperId(int value) {
          bitField0_ |= 0x00000080;
          gulperId_ = value;
          onChanged();
          return this;
        }
        public Builder clearGulperId() {
          bitField0_ = (bitField0_ & ~0x00000080);
          gulperId_ = 0;
          onChanged();
          return this;
        }
        
        // optional float chfl = 9;
        private float chfl_ ;
        public boolean hasChfl() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        public float getChfl() {
          return chfl_;
        }
        public Builder setChfl(float value) {
          bitField0_ |= 0x00000100;
          chfl_ = value;
          onChanged();
          return this;
        }
        public Builder clearChfl() {
          bitField0_ = (bitField0_ & ~0x00000100);
          chfl_ = 0F;
          onChanged();
          return this;
        }
        
        // optional uint32 utm_zone = 10 [default = 10];
        private int utmZone_ = 10;
        public boolean hasUtmZone() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        public int getUtmZone() {
          return utmZone_;
        }
        public Builder setUtmZone(int value) {
          bitField0_ |= 0x00000200;
          utmZone_ = value;
          onChanged();
          return this;
        }
        public Builder clearUtmZone() {
          bitField0_ = (bitField0_ & ~0x00000200);
          utmZone_ = 10;
          onChanged();
          return this;
        }
        
        // optional string utm_letter = 11 [default = "N"];
        private java.lang.Object utmLetter_ = "N";
        public boolean hasUtmLetter() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        public String getUtmLetter() {
          java.lang.Object ref = utmLetter_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            utmLetter_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setUtmLetter(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
          utmLetter_ = value;
          onChanged();
          return this;
        }
        public Builder clearUtmLetter() {
          bitField0_ = (bitField0_ & ~0x00000400);
          utmLetter_ = getDefaultInstance().getUtmLetter();
          onChanged();
          return this;
        }
        void setUtmLetter(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000400;
          utmLetter_ = value;
          onChanged();
        }
        
        // optional string system_id = 12;
        private java.lang.Object systemId_ = "";
        public boolean hasSystemId() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        public String getSystemId() {
          java.lang.Object ref = systemId_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            systemId_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setSystemId(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
          systemId_ = value;
          onChanged();
          return this;
        }
        public Builder clearSystemId() {
          bitField0_ = (bitField0_ & ~0x00000800);
          systemId_ = getDefaultInstance().getSystemId();
          onChanged();
          return this;
        }
        void setSystemId(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000800;
          systemId_ = value;
          onChanged();
        }
        
        // @@protoc_insertion_point(builder_scope:org.mbari.trex.SensorMessage.Sample)
      }
      
      static {
        defaultInstance = new Sample(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:org.mbari.trex.SensorMessage.Sample)
    }
    
    public interface GpsErrorOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required uint64 from_time = 1;
      boolean hasFromTime();
      long getFromTime();
      
      // required uint64 to_time = 2;
      boolean hasToTime();
      long getToTime();
      
      // optional float northing = 3;
      boolean hasNorthing();
      float getNorthing();
      
      // optional float easting = 4;
      boolean hasEasting();
      float getEasting();
      
      // optional float northing_error_rate = 7;
      boolean hasNorthingErrorRate();
      float getNorthingErrorRate();
      
      // optional float easting_error_rate = 8;
      boolean hasEastingErrorRate();
      float getEastingErrorRate();
    }
    public static final class GpsError extends
        com.google.protobuf.GeneratedMessage
        implements GpsErrorOrBuilder {
      // Use GpsError.newBuilder() to construct.
      private GpsError(Builder builder) {
        super(builder);
      }
      private GpsError(boolean noInit) {}
      
      private static final GpsError defaultInstance;
      public static GpsError getDefaultInstance() {
        return defaultInstance;
      }
      
      public GpsError getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mbari.trex.Sensor.internal_static_org_mbari_trex_SensorMessage_GpsError_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mbari.trex.Sensor.internal_static_org_mbari_trex_SensorMessage_GpsError_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required uint64 from_time = 1;
      public static final int FROM_TIME_FIELD_NUMBER = 1;
      private long fromTime_;
      public boolean hasFromTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getFromTime() {
        return fromTime_;
      }
      
      // required uint64 to_time = 2;
      public static final int TO_TIME_FIELD_NUMBER = 2;
      private long toTime_;
      public boolean hasToTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getToTime() {
        return toTime_;
      }
      
      // optional float northing = 3;
      public static final int NORTHING_FIELD_NUMBER = 3;
      private float northing_;
      public boolean hasNorthing() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getNorthing() {
        return northing_;
      }
      
      // optional float easting = 4;
      public static final int EASTING_FIELD_NUMBER = 4;
      private float easting_;
      public boolean hasEasting() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getEasting() {
        return easting_;
      }
      
      // optional float northing_error_rate = 7;
      public static final int NORTHING_ERROR_RATE_FIELD_NUMBER = 7;
      private float northingErrorRate_;
      public boolean hasNorthingErrorRate() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getNorthingErrorRate() {
        return northingErrorRate_;
      }
      
      // optional float easting_error_rate = 8;
      public static final int EASTING_ERROR_RATE_FIELD_NUMBER = 8;
      private float eastingErrorRate_;
      public boolean hasEastingErrorRate() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public float getEastingErrorRate() {
        return eastingErrorRate_;
      }
      
      private void initFields() {
        fromTime_ = 0L;
        toTime_ = 0L;
        northing_ = 0F;
        easting_ = 0F;
        northingErrorRate_ = 0F;
        eastingErrorRate_ = 0F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasFromTime()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasToTime()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, fromTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt64(2, toTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, northing_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, easting_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(7, northingErrorRate_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeFloat(8, eastingErrorRate_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, fromTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, toTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, northing_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, easting_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(7, northingErrorRate_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(8, eastingErrorRate_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.mbari.trex.Sensor.SensorMessage.GpsError parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.mbari.trex.Sensor.SensorMessage.GpsError parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.mbari.trex.Sensor.SensorMessage.GpsError parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.mbari.trex.Sensor.SensorMessage.GpsError parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.mbari.trex.Sensor.SensorMessage.GpsError parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.mbari.trex.Sensor.SensorMessage.GpsError parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.mbari.trex.Sensor.SensorMessage.GpsError parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.mbari.trex.Sensor.SensorMessage.GpsError parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.mbari.trex.Sensor.SensorMessage.GpsError parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.mbari.trex.Sensor.SensorMessage.GpsError parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.mbari.trex.Sensor.SensorMessage.GpsError prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.mbari.trex.Sensor.SensorMessage.GpsErrorOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.mbari.trex.Sensor.internal_static_org_mbari_trex_SensorMessage_GpsError_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.mbari.trex.Sensor.internal_static_org_mbari_trex_SensorMessage_GpsError_fieldAccessorTable;
        }
        
        // Construct using org.mbari.trex.Sensor.SensorMessage.GpsError.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          fromTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          toTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          northing_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          easting_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000008);
          northingErrorRate_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000010);
          eastingErrorRate_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.mbari.trex.Sensor.SensorMessage.GpsError.getDescriptor();
        }
        
        public org.mbari.trex.Sensor.SensorMessage.GpsError getDefaultInstanceForType() {
          return org.mbari.trex.Sensor.SensorMessage.GpsError.getDefaultInstance();
        }
        
        public org.mbari.trex.Sensor.SensorMessage.GpsError build() {
          org.mbari.trex.Sensor.SensorMessage.GpsError result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.mbari.trex.Sensor.SensorMessage.GpsError buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          org.mbari.trex.Sensor.SensorMessage.GpsError result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public org.mbari.trex.Sensor.SensorMessage.GpsError buildPartial() {
          org.mbari.trex.Sensor.SensorMessage.GpsError result = new org.mbari.trex.Sensor.SensorMessage.GpsError(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.fromTime_ = fromTime_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.toTime_ = toTime_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.northing_ = northing_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.easting_ = easting_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.northingErrorRate_ = northingErrorRate_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.eastingErrorRate_ = eastingErrorRate_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.mbari.trex.Sensor.SensorMessage.GpsError) {
            return mergeFrom((org.mbari.trex.Sensor.SensorMessage.GpsError)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(org.mbari.trex.Sensor.SensorMessage.GpsError other) {
          if (other == org.mbari.trex.Sensor.SensorMessage.GpsError.getDefaultInstance()) return this;
          if (other.hasFromTime()) {
            setFromTime(other.getFromTime());
          }
          if (other.hasToTime()) {
            setToTime(other.getToTime());
          }
          if (other.hasNorthing()) {
            setNorthing(other.getNorthing());
          }
          if (other.hasEasting()) {
            setEasting(other.getEasting());
          }
          if (other.hasNorthingErrorRate()) {
            setNorthingErrorRate(other.getNorthingErrorRate());
          }
          if (other.hasEastingErrorRate()) {
            setEastingErrorRate(other.getEastingErrorRate());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasFromTime()) {
            
            return false;
          }
          if (!hasToTime()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                fromTime_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                toTime_ = input.readUInt64();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                northing_ = input.readFloat();
                break;
              }
              case 37: {
                bitField0_ |= 0x00000008;
                easting_ = input.readFloat();
                break;
              }
              case 61: {
                bitField0_ |= 0x00000010;
                northingErrorRate_ = input.readFloat();
                break;
              }
              case 69: {
                bitField0_ |= 0x00000020;
                eastingErrorRate_ = input.readFloat();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required uint64 from_time = 1;
        private long fromTime_ ;
        public boolean hasFromTime() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public long getFromTime() {
          return fromTime_;
        }
        public Builder setFromTime(long value) {
          bitField0_ |= 0x00000001;
          fromTime_ = value;
          onChanged();
          return this;
        }
        public Builder clearFromTime() {
          bitField0_ = (bitField0_ & ~0x00000001);
          fromTime_ = 0L;
          onChanged();
          return this;
        }
        
        // required uint64 to_time = 2;
        private long toTime_ ;
        public boolean hasToTime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public long getToTime() {
          return toTime_;
        }
        public Builder setToTime(long value) {
          bitField0_ |= 0x00000002;
          toTime_ = value;
          onChanged();
          return this;
        }
        public Builder clearToTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          toTime_ = 0L;
          onChanged();
          return this;
        }
        
        // optional float northing = 3;
        private float northing_ ;
        public boolean hasNorthing() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public float getNorthing() {
          return northing_;
        }
        public Builder setNorthing(float value) {
          bitField0_ |= 0x00000004;
          northing_ = value;
          onChanged();
          return this;
        }
        public Builder clearNorthing() {
          bitField0_ = (bitField0_ & ~0x00000004);
          northing_ = 0F;
          onChanged();
          return this;
        }
        
        // optional float easting = 4;
        private float easting_ ;
        public boolean hasEasting() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public float getEasting() {
          return easting_;
        }
        public Builder setEasting(float value) {
          bitField0_ |= 0x00000008;
          easting_ = value;
          onChanged();
          return this;
        }
        public Builder clearEasting() {
          bitField0_ = (bitField0_ & ~0x00000008);
          easting_ = 0F;
          onChanged();
          return this;
        }
        
        // optional float northing_error_rate = 7;
        private float northingErrorRate_ ;
        public boolean hasNorthingErrorRate() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public float getNorthingErrorRate() {
          return northingErrorRate_;
        }
        public Builder setNorthingErrorRate(float value) {
          bitField0_ |= 0x00000010;
          northingErrorRate_ = value;
          onChanged();
          return this;
        }
        public Builder clearNorthingErrorRate() {
          bitField0_ = (bitField0_ & ~0x00000010);
          northingErrorRate_ = 0F;
          onChanged();
          return this;
        }
        
        // optional float easting_error_rate = 8;
        private float eastingErrorRate_ ;
        public boolean hasEastingErrorRate() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        public float getEastingErrorRate() {
          return eastingErrorRate_;
        }
        public Builder setEastingErrorRate(float value) {
          bitField0_ |= 0x00000020;
          eastingErrorRate_ = value;
          onChanged();
          return this;
        }
        public Builder clearEastingErrorRate() {
          bitField0_ = (bitField0_ & ~0x00000020);
          eastingErrorRate_ = 0F;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:org.mbari.trex.SensorMessage.GpsError)
      }
      
      static {
        defaultInstance = new GpsError(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:org.mbari.trex.SensorMessage.GpsError)
    }
    
    private int bitField0_;
    // repeated .org.mbari.trex.SensorMessage.Sample sample = 2;
    public static final int SAMPLE_FIELD_NUMBER = 2;
    private java.util.List<org.mbari.trex.Sensor.SensorMessage.Sample> sample_;
    public java.util.List<org.mbari.trex.Sensor.SensorMessage.Sample> getSampleList() {
      return sample_;
    }
    public java.util.List<? extends org.mbari.trex.Sensor.SensorMessage.SampleOrBuilder> 
        getSampleOrBuilderList() {
      return sample_;
    }
    public int getSampleCount() {
      return sample_.size();
    }
    public org.mbari.trex.Sensor.SensorMessage.Sample getSample(int index) {
      return sample_.get(index);
    }
    public org.mbari.trex.Sensor.SensorMessage.SampleOrBuilder getSampleOrBuilder(
        int index) {
      return sample_.get(index);
    }
    
    // optional .org.mbari.trex.SensorMessage.GpsError gps_fix = 1;
    public static final int GPS_FIX_FIELD_NUMBER = 1;
    private org.mbari.trex.Sensor.SensorMessage.GpsError gpsFix_;
    public boolean hasGpsFix() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.mbari.trex.Sensor.SensorMessage.GpsError getGpsFix() {
      return gpsFix_;
    }
    public org.mbari.trex.Sensor.SensorMessage.GpsErrorOrBuilder getGpsFixOrBuilder() {
      return gpsFix_;
    }
    
    // repeated .org.mbari.trex.Predicate observations = 3;
    public static final int OBSERVATIONS_FIELD_NUMBER = 3;
    private java.util.List<org.mbari.trex.Trex.Predicate> observations_;
    public java.util.List<org.mbari.trex.Trex.Predicate> getObservationsList() {
      return observations_;
    }
    public java.util.List<? extends org.mbari.trex.Trex.PredicateOrBuilder> 
        getObservationsOrBuilderList() {
      return observations_;
    }
    public int getObservationsCount() {
      return observations_.size();
    }
    public org.mbari.trex.Trex.Predicate getObservations(int index) {
      return observations_.get(index);
    }
    public org.mbari.trex.Trex.PredicateOrBuilder getObservationsOrBuilder(
        int index) {
      return observations_.get(index);
    }
    
    private void initFields() {
      sample_ = java.util.Collections.emptyList();
      gpsFix_ = org.mbari.trex.Sensor.SensorMessage.GpsError.getDefaultInstance();
      observations_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getSampleCount(); i++) {
        if (!getSample(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGpsFix()) {
        if (!getGpsFix().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getObservationsCount(); i++) {
        if (!getObservations(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, gpsFix_);
      }
      for (int i = 0; i < sample_.size(); i++) {
        output.writeMessage(2, sample_.get(i));
      }
      for (int i = 0; i < observations_.size(); i++) {
        output.writeMessage(3, observations_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, gpsFix_);
      }
      for (int i = 0; i < sample_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sample_.get(i));
      }
      for (int i = 0; i < observations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, observations_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mbari.trex.Sensor.SensorMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mbari.trex.Sensor.SensorMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mbari.trex.Sensor.SensorMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mbari.trex.Sensor.SensorMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mbari.trex.Sensor.SensorMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mbari.trex.Sensor.SensorMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mbari.trex.Sensor.SensorMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mbari.trex.Sensor.SensorMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mbari.trex.Sensor.SensorMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mbari.trex.Sensor.SensorMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mbari.trex.Sensor.SensorMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.mbari.trex.Sensor.SensorMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mbari.trex.Sensor.internal_static_org_mbari_trex_SensorMessage_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mbari.trex.Sensor.internal_static_org_mbari_trex_SensorMessage_fieldAccessorTable;
      }
      
      // Construct using org.mbari.trex.Sensor.SensorMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSampleFieldBuilder();
          getGpsFixFieldBuilder();
          getObservationsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (sampleBuilder_ == null) {
          sample_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          sampleBuilder_.clear();
        }
        if (gpsFixBuilder_ == null) {
          gpsFix_ = org.mbari.trex.Sensor.SensorMessage.GpsError.getDefaultInstance();
        } else {
          gpsFixBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (observationsBuilder_ == null) {
          observations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          observationsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.mbari.trex.Sensor.SensorMessage.getDescriptor();
      }
      
      public org.mbari.trex.Sensor.SensorMessage getDefaultInstanceForType() {
        return org.mbari.trex.Sensor.SensorMessage.getDefaultInstance();
      }
      
      public org.mbari.trex.Sensor.SensorMessage build() {
        org.mbari.trex.Sensor.SensorMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mbari.trex.Sensor.SensorMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mbari.trex.Sensor.SensorMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mbari.trex.Sensor.SensorMessage buildPartial() {
        org.mbari.trex.Sensor.SensorMessage result = new org.mbari.trex.Sensor.SensorMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (sampleBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            sample_ = java.util.Collections.unmodifiableList(sample_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.sample_ = sample_;
        } else {
          result.sample_ = sampleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (gpsFixBuilder_ == null) {
          result.gpsFix_ = gpsFix_;
        } else {
          result.gpsFix_ = gpsFixBuilder_.build();
        }
        if (observationsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            observations_ = java.util.Collections.unmodifiableList(observations_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.observations_ = observations_;
        } else {
          result.observations_ = observationsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.mbari.trex.Sensor.SensorMessage) {
          return mergeFrom((org.mbari.trex.Sensor.SensorMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.mbari.trex.Sensor.SensorMessage other) {
        if (other == org.mbari.trex.Sensor.SensorMessage.getDefaultInstance()) return this;
        if (sampleBuilder_ == null) {
          if (!other.sample_.isEmpty()) {
            if (sample_.isEmpty()) {
              sample_ = other.sample_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSampleIsMutable();
              sample_.addAll(other.sample_);
            }
            onChanged();
          }
        } else {
          if (!other.sample_.isEmpty()) {
            if (sampleBuilder_.isEmpty()) {
              sampleBuilder_.dispose();
              sampleBuilder_ = null;
              sample_ = other.sample_;
              bitField0_ = (bitField0_ & ~0x00000001);
              sampleBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSampleFieldBuilder() : null;
            } else {
              sampleBuilder_.addAllMessages(other.sample_);
            }
          }
        }
        if (other.hasGpsFix()) {
          mergeGpsFix(other.getGpsFix());
        }
        if (observationsBuilder_ == null) {
          if (!other.observations_.isEmpty()) {
            if (observations_.isEmpty()) {
              observations_ = other.observations_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureObservationsIsMutable();
              observations_.addAll(other.observations_);
            }
            onChanged();
          }
        } else {
          if (!other.observations_.isEmpty()) {
            if (observationsBuilder_.isEmpty()) {
              observationsBuilder_.dispose();
              observationsBuilder_ = null;
              observations_ = other.observations_;
              bitField0_ = (bitField0_ & ~0x00000004);
              observationsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getObservationsFieldBuilder() : null;
            } else {
              observationsBuilder_.addAllMessages(other.observations_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getSampleCount(); i++) {
          if (!getSample(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasGpsFix()) {
          if (!getGpsFix().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getObservationsCount(); i++) {
          if (!getObservations(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              org.mbari.trex.Sensor.SensorMessage.GpsError.Builder subBuilder = org.mbari.trex.Sensor.SensorMessage.GpsError.newBuilder();
              if (hasGpsFix()) {
                subBuilder.mergeFrom(getGpsFix());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGpsFix(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.mbari.trex.Sensor.SensorMessage.Sample.Builder subBuilder = org.mbari.trex.Sensor.SensorMessage.Sample.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSample(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.mbari.trex.Trex.Predicate.Builder subBuilder = org.mbari.trex.Trex.Predicate.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addObservations(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .org.mbari.trex.SensorMessage.Sample sample = 2;
      private java.util.List<org.mbari.trex.Sensor.SensorMessage.Sample> sample_ =
        java.util.Collections.emptyList();
      private void ensureSampleIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          sample_ = new java.util.ArrayList<org.mbari.trex.Sensor.SensorMessage.Sample>(sample_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mbari.trex.Sensor.SensorMessage.Sample, org.mbari.trex.Sensor.SensorMessage.Sample.Builder, org.mbari.trex.Sensor.SensorMessage.SampleOrBuilder> sampleBuilder_;
      
      public java.util.List<org.mbari.trex.Sensor.SensorMessage.Sample> getSampleList() {
        if (sampleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sample_);
        } else {
          return sampleBuilder_.getMessageList();
        }
      }
      public int getSampleCount() {
        if (sampleBuilder_ == null) {
          return sample_.size();
        } else {
          return sampleBuilder_.getCount();
        }
      }
      public org.mbari.trex.Sensor.SensorMessage.Sample getSample(int index) {
        if (sampleBuilder_ == null) {
          return sample_.get(index);
        } else {
          return sampleBuilder_.getMessage(index);
        }
      }
      public Builder setSample(
          int index, org.mbari.trex.Sensor.SensorMessage.Sample value) {
        if (sampleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSampleIsMutable();
          sample_.set(index, value);
          onChanged();
        } else {
          sampleBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setSample(
          int index, org.mbari.trex.Sensor.SensorMessage.Sample.Builder builderForValue) {
        if (sampleBuilder_ == null) {
          ensureSampleIsMutable();
          sample_.set(index, builderForValue.build());
          onChanged();
        } else {
          sampleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addSample(org.mbari.trex.Sensor.SensorMessage.Sample value) {
        if (sampleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSampleIsMutable();
          sample_.add(value);
          onChanged();
        } else {
          sampleBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addSample(
          int index, org.mbari.trex.Sensor.SensorMessage.Sample value) {
        if (sampleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSampleIsMutable();
          sample_.add(index, value);
          onChanged();
        } else {
          sampleBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addSample(
          org.mbari.trex.Sensor.SensorMessage.Sample.Builder builderForValue) {
        if (sampleBuilder_ == null) {
          ensureSampleIsMutable();
          sample_.add(builderForValue.build());
          onChanged();
        } else {
          sampleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addSample(
          int index, org.mbari.trex.Sensor.SensorMessage.Sample.Builder builderForValue) {
        if (sampleBuilder_ == null) {
          ensureSampleIsMutable();
          sample_.add(index, builderForValue.build());
          onChanged();
        } else {
          sampleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllSample(
          java.lang.Iterable<? extends org.mbari.trex.Sensor.SensorMessage.Sample> values) {
        if (sampleBuilder_ == null) {
          ensureSampleIsMutable();
          super.addAll(values, sample_);
          onChanged();
        } else {
          sampleBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearSample() {
        if (sampleBuilder_ == null) {
          sample_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          sampleBuilder_.clear();
        }
        return this;
      }
      public Builder removeSample(int index) {
        if (sampleBuilder_ == null) {
          ensureSampleIsMutable();
          sample_.remove(index);
          onChanged();
        } else {
          sampleBuilder_.remove(index);
        }
        return this;
      }
      public org.mbari.trex.Sensor.SensorMessage.Sample.Builder getSampleBuilder(
          int index) {
        return getSampleFieldBuilder().getBuilder(index);
      }
      public org.mbari.trex.Sensor.SensorMessage.SampleOrBuilder getSampleOrBuilder(
          int index) {
        if (sampleBuilder_ == null) {
          return sample_.get(index);  } else {
          return sampleBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.mbari.trex.Sensor.SensorMessage.SampleOrBuilder> 
           getSampleOrBuilderList() {
        if (sampleBuilder_ != null) {
          return sampleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sample_);
        }
      }
      public org.mbari.trex.Sensor.SensorMessage.Sample.Builder addSampleBuilder() {
        return getSampleFieldBuilder().addBuilder(
            org.mbari.trex.Sensor.SensorMessage.Sample.getDefaultInstance());
      }
      public org.mbari.trex.Sensor.SensorMessage.Sample.Builder addSampleBuilder(
          int index) {
        return getSampleFieldBuilder().addBuilder(
            index, org.mbari.trex.Sensor.SensorMessage.Sample.getDefaultInstance());
      }
      public java.util.List<org.mbari.trex.Sensor.SensorMessage.Sample.Builder> 
           getSampleBuilderList() {
        return getSampleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mbari.trex.Sensor.SensorMessage.Sample, org.mbari.trex.Sensor.SensorMessage.Sample.Builder, org.mbari.trex.Sensor.SensorMessage.SampleOrBuilder> 
          getSampleFieldBuilder() {
        if (sampleBuilder_ == null) {
          sampleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.mbari.trex.Sensor.SensorMessage.Sample, org.mbari.trex.Sensor.SensorMessage.Sample.Builder, org.mbari.trex.Sensor.SensorMessage.SampleOrBuilder>(
                  sample_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          sample_ = null;
        }
        return sampleBuilder_;
      }
      
      // optional .org.mbari.trex.SensorMessage.GpsError gps_fix = 1;
      private org.mbari.trex.Sensor.SensorMessage.GpsError gpsFix_ = org.mbari.trex.Sensor.SensorMessage.GpsError.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.mbari.trex.Sensor.SensorMessage.GpsError, org.mbari.trex.Sensor.SensorMessage.GpsError.Builder, org.mbari.trex.Sensor.SensorMessage.GpsErrorOrBuilder> gpsFixBuilder_;
      public boolean hasGpsFix() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.mbari.trex.Sensor.SensorMessage.GpsError getGpsFix() {
        if (gpsFixBuilder_ == null) {
          return gpsFix_;
        } else {
          return gpsFixBuilder_.getMessage();
        }
      }
      public Builder setGpsFix(org.mbari.trex.Sensor.SensorMessage.GpsError value) {
        if (gpsFixBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpsFix_ = value;
          onChanged();
        } else {
          gpsFixBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setGpsFix(
          org.mbari.trex.Sensor.SensorMessage.GpsError.Builder builderForValue) {
        if (gpsFixBuilder_ == null) {
          gpsFix_ = builderForValue.build();
          onChanged();
        } else {
          gpsFixBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeGpsFix(org.mbari.trex.Sensor.SensorMessage.GpsError value) {
        if (gpsFixBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              gpsFix_ != org.mbari.trex.Sensor.SensorMessage.GpsError.getDefaultInstance()) {
            gpsFix_ =
              org.mbari.trex.Sensor.SensorMessage.GpsError.newBuilder(gpsFix_).mergeFrom(value).buildPartial();
          } else {
            gpsFix_ = value;
          }
          onChanged();
        } else {
          gpsFixBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearGpsFix() {
        if (gpsFixBuilder_ == null) {
          gpsFix_ = org.mbari.trex.Sensor.SensorMessage.GpsError.getDefaultInstance();
          onChanged();
        } else {
          gpsFixBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public org.mbari.trex.Sensor.SensorMessage.GpsError.Builder getGpsFixBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getGpsFixFieldBuilder().getBuilder();
      }
      public org.mbari.trex.Sensor.SensorMessage.GpsErrorOrBuilder getGpsFixOrBuilder() {
        if (gpsFixBuilder_ != null) {
          return gpsFixBuilder_.getMessageOrBuilder();
        } else {
          return gpsFix_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.mbari.trex.Sensor.SensorMessage.GpsError, org.mbari.trex.Sensor.SensorMessage.GpsError.Builder, org.mbari.trex.Sensor.SensorMessage.GpsErrorOrBuilder> 
          getGpsFixFieldBuilder() {
        if (gpsFixBuilder_ == null) {
          gpsFixBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.mbari.trex.Sensor.SensorMessage.GpsError, org.mbari.trex.Sensor.SensorMessage.GpsError.Builder, org.mbari.trex.Sensor.SensorMessage.GpsErrorOrBuilder>(
                  gpsFix_,
                  getParentForChildren(),
                  isClean());
          gpsFix_ = null;
        }
        return gpsFixBuilder_;
      }
      
      // repeated .org.mbari.trex.Predicate observations = 3;
      private java.util.List<org.mbari.trex.Trex.Predicate> observations_ =
        java.util.Collections.emptyList();
      private void ensureObservationsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          observations_ = new java.util.ArrayList<org.mbari.trex.Trex.Predicate>(observations_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mbari.trex.Trex.Predicate, org.mbari.trex.Trex.Predicate.Builder, org.mbari.trex.Trex.PredicateOrBuilder> observationsBuilder_;
      
      public java.util.List<org.mbari.trex.Trex.Predicate> getObservationsList() {
        if (observationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(observations_);
        } else {
          return observationsBuilder_.getMessageList();
        }
      }
      public int getObservationsCount() {
        if (observationsBuilder_ == null) {
          return observations_.size();
        } else {
          return observationsBuilder_.getCount();
        }
      }
      public org.mbari.trex.Trex.Predicate getObservations(int index) {
        if (observationsBuilder_ == null) {
          return observations_.get(index);
        } else {
          return observationsBuilder_.getMessage(index);
        }
      }
      public Builder setObservations(
          int index, org.mbari.trex.Trex.Predicate value) {
        if (observationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObservationsIsMutable();
          observations_.set(index, value);
          onChanged();
        } else {
          observationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setObservations(
          int index, org.mbari.trex.Trex.Predicate.Builder builderForValue) {
        if (observationsBuilder_ == null) {
          ensureObservationsIsMutable();
          observations_.set(index, builderForValue.build());
          onChanged();
        } else {
          observationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addObservations(org.mbari.trex.Trex.Predicate value) {
        if (observationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObservationsIsMutable();
          observations_.add(value);
          onChanged();
        } else {
          observationsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addObservations(
          int index, org.mbari.trex.Trex.Predicate value) {
        if (observationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObservationsIsMutable();
          observations_.add(index, value);
          onChanged();
        } else {
          observationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addObservations(
          org.mbari.trex.Trex.Predicate.Builder builderForValue) {
        if (observationsBuilder_ == null) {
          ensureObservationsIsMutable();
          observations_.add(builderForValue.build());
          onChanged();
        } else {
          observationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addObservations(
          int index, org.mbari.trex.Trex.Predicate.Builder builderForValue) {
        if (observationsBuilder_ == null) {
          ensureObservationsIsMutable();
          observations_.add(index, builderForValue.build());
          onChanged();
        } else {
          observationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllObservations(
          java.lang.Iterable<? extends org.mbari.trex.Trex.Predicate> values) {
        if (observationsBuilder_ == null) {
          ensureObservationsIsMutable();
          super.addAll(values, observations_);
          onChanged();
        } else {
          observationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearObservations() {
        if (observationsBuilder_ == null) {
          observations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          observationsBuilder_.clear();
        }
        return this;
      }
      public Builder removeObservations(int index) {
        if (observationsBuilder_ == null) {
          ensureObservationsIsMutable();
          observations_.remove(index);
          onChanged();
        } else {
          observationsBuilder_.remove(index);
        }
        return this;
      }
      public org.mbari.trex.Trex.Predicate.Builder getObservationsBuilder(
          int index) {
        return getObservationsFieldBuilder().getBuilder(index);
      }
      public org.mbari.trex.Trex.PredicateOrBuilder getObservationsOrBuilder(
          int index) {
        if (observationsBuilder_ == null) {
          return observations_.get(index);  } else {
          return observationsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.mbari.trex.Trex.PredicateOrBuilder> 
           getObservationsOrBuilderList() {
        if (observationsBuilder_ != null) {
          return observationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(observations_);
        }
      }
      public org.mbari.trex.Trex.Predicate.Builder addObservationsBuilder() {
        return getObservationsFieldBuilder().addBuilder(
            org.mbari.trex.Trex.Predicate.getDefaultInstance());
      }
      public org.mbari.trex.Trex.Predicate.Builder addObservationsBuilder(
          int index) {
        return getObservationsFieldBuilder().addBuilder(
            index, org.mbari.trex.Trex.Predicate.getDefaultInstance());
      }
      public java.util.List<org.mbari.trex.Trex.Predicate.Builder> 
           getObservationsBuilderList() {
        return getObservationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mbari.trex.Trex.Predicate, org.mbari.trex.Trex.Predicate.Builder, org.mbari.trex.Trex.PredicateOrBuilder> 
          getObservationsFieldBuilder() {
        if (observationsBuilder_ == null) {
          observationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.mbari.trex.Trex.Predicate, org.mbari.trex.Trex.Predicate.Builder, org.mbari.trex.Trex.PredicateOrBuilder>(
                  observations_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          observations_ = null;
        }
        return observationsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:org.mbari.trex.SensorMessage)
    }
    
    static {
      defaultInstance = new SensorMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.mbari.trex.SensorMessage)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_mbari_trex_SensorMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_mbari_trex_SensorMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_mbari_trex_SensorMessage_Sample_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_mbari_trex_SensorMessage_Sample_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_mbari_trex_SensorMessage_GpsError_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_mbari_trex_SensorMessage_GpsError_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014sensor.proto\022\016org.mbari.trex\032\ntrex.pro" +
      "to\"\241\004\n\rSensorMessage\0224\n\006sample\030\002 \003(\0132$.o" +
      "rg.mbari.trex.SensorMessage.Sample\0227\n\007gp" +
      "s_fix\030\001 \001(\0132&.org.mbari.trex.SensorMessa" +
      "ge.GpsError\022/\n\014observations\030\003 \003(\0132\031.org." +
      "mbari.trex.Predicate\032\342\001\n\006Sample\022\r\n\005utime" +
      "\030\001 \002(\004\022\020\n\010northing\030\002 \002(\002\022\017\n\007easting\030\003 \002(" +
      "\002\022\r\n\005depth\030\004 \002(\002\022\023\n\013temperature\030\005 \001(\002\022\020\n" +
      "\010salinity\030\006 \001(\002\022\017\n\007nitrate\030\007 \001(\002\022\021\n\tgulp" +
      "er_id\030\010 \001(\005\022\014\n\004chfl\030\t \001(\002\022\024\n\010utm_zone\030\n ",
      "\001(\r:\00210\022\025\n\nutm_letter\030\013 \001(\t:\001N\022\021\n\tsystem" +
      "_id\030\014 \001(\t\032\212\001\n\010GpsError\022\021\n\tfrom_time\030\001 \002(" +
      "\004\022\017\n\007to_time\030\002 \002(\004\022\020\n\010northing\030\003 \001(\002\022\017\n\007" +
      "easting\030\004 \001(\002\022\033\n\023northing_error_rate\030\007 \001" +
      "(\002\022\032\n\022easting_error_rate\030\010 \001(\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_mbari_trex_SensorMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_mbari_trex_SensorMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_mbari_trex_SensorMessage_descriptor,
              new java.lang.String[] { "Sample", "GpsFix", "Observations", },
              org.mbari.trex.Sensor.SensorMessage.class,
              org.mbari.trex.Sensor.SensorMessage.Builder.class);
          internal_static_org_mbari_trex_SensorMessage_Sample_descriptor =
            internal_static_org_mbari_trex_SensorMessage_descriptor.getNestedTypes().get(0);
          internal_static_org_mbari_trex_SensorMessage_Sample_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_mbari_trex_SensorMessage_Sample_descriptor,
              new java.lang.String[] { "Utime", "Northing", "Easting", "Depth", "Temperature", "Salinity", "Nitrate", "GulperId", "Chfl", "UtmZone", "UtmLetter", "SystemId", },
              org.mbari.trex.Sensor.SensorMessage.Sample.class,
              org.mbari.trex.Sensor.SensorMessage.Sample.Builder.class);
          internal_static_org_mbari_trex_SensorMessage_GpsError_descriptor =
            internal_static_org_mbari_trex_SensorMessage_descriptor.getNestedTypes().get(1);
          internal_static_org_mbari_trex_SensorMessage_GpsError_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_mbari_trex_SensorMessage_GpsError_descriptor,
              new java.lang.String[] { "FromTime", "ToTime", "Northing", "Easting", "NorthingErrorRate", "EastingErrorRate", },
              org.mbari.trex.Sensor.SensorMessage.GpsError.class,
              org.mbari.trex.Sensor.SensorMessage.GpsError.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.mbari.trex.Trex.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
